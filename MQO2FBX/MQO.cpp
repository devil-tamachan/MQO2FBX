/* Generated by re2c 0.13.7.5 on Mon Jul 16 13:48:34 2018 */

#include "stdafx.h"

typedef unsigned char uchar;
typedef unsigned int uint;

#define	YYCTYPE		uchar
#define	YYCURSOR	cursor
#define	YYLIMIT		s->lim
#define	YYMARKER	s->ptr

#define	RET(i)	{s->cur = cursor; return i;}
#define	RETT(i, typeid)	{s->cur = cursor; s->type = typeid; return i;}

class CMYMaterial
{
public:
  CMYMaterial() : shader(SHADER_Phong), uid(0), vcol(false), dbls(false), dif(0.8), amb(0.6), emi(0.0), spc(0.0), power(5.0), reflect(0.0), refract(1.0), proj_type(PROJTYPE_UV)
  {
    for(int i=0;i<4;i++)col[i]=1.0;
    for(int i=0;i<3;i++)
    {
      proj_scale[i]=1.0;
      proj_pos[i] = proj_angle[i] = amb_col[i] = emi_col[i] = spc_col[i] = 0;
    }
  }
public:
  CString name;
  enum SHADER {SHADER_Classic = 0, SHADER_Constant, SHADER_Lambert, SHADER_Phong, SHADER_Blinn } shader;
  uint uid;
  bool vcol;
  bool dbls; //double face
  double col[4];
  double dif;
  double amb;
  double amb_col[3];
  double emi;
  double emi_col[3];
  double spc;
  double spc_col[3];
  double power;
  double reflect;
  double refract;
  CString tex;
  CString aplane;
  CString bump;
  enum PROJTYPE {PROJTYPE_UV=0, PROJTYPE_PLANE, PROJTYPE_CYLINDER, PROJTYPE_SPHERE} proj_type;
  double proj_pos[3];
  double proj_scale[3];
  double proj_angle[3];
};

class CMYVertex
{
public:
  CMYVertex(double _x, double _y, double _z)
  {
    x = _x;
    y = _y;
    z = _z;
  }
	double x, y, z;
};

class CMYFace
{
public:
  CMYFace() : M(0), V(NULL), UV(NULL), COL(NULL)/*, N(NULL)*/
  {
  }
  ~CMYFace()
  {
    if(V)
    {
      delete V;
      V = NULL;
    }
    if(UV)
    {
      delete UV;
      UV = NULL;
    }
    if(COL)
    {
      delete COL;
      COL = NULL;
    }
/*    if(N)
    {
      delete N;
      N = NULL;
    }*/
  }
  CAtlArray<uint> *V;
  int M;
  CAtlArray<double> *UV;
  CAtlArray<COLORREF> *COL;
//  CAtlArray<double> *N;
//  CAtlArray<double> *CRS;
};

class CMYObject
{
public:
  CMYObject() : vertex(NULL), face(NULL), pFbxNode(NULL), vertexattrUID(NULL)
  {
  }
  ~CMYObject()
  {
    if(vertex)
    {
      size_t m=vertex->GetCount();;
      for(size_t i=0;i<m;i++)delete (*vertex)[i];
	  delete vertex;
      vertex = NULL;
    }
    if(face)
    {
      size_t m=face->GetCount();;
      for(size_t i=0;i<m;i++)delete (*face)[i];
	  delete face;
      face = NULL;
    }
    if(vertexattrUID)
    {
	  delete vertexattrUID;
      vertexattrUID = NULL;
    }
  }
  FbxNode *pFbxNode;
  CString name;
  int uid;
  int depth;
  bool folding;
  double scale[3];
  double rotation[3];
  double translation[3];
  //enum {PATCH_PLANE=0, PATCH_SPLINE1, PATCH_SPLINE2, PATCH_CATMULLCLARK, PATCH_OPENSUBDIV} patch;
  //bool patchtri;
  //int segment;
  bool visible;
  //bool locking;
  enum SHADING {SHADING_FLAT=0, SHADING_GLOW} shading;
  //double facet;
  double color[3];
  bool color_type;
  //enum MIRROR {MIRROR_NONE=0, MIRROR_SPLIT, MIRROR_CONNECT} mirror;
  //enum MIRRORAXIS {MIRRORAXIS_X=0, MIRRORAXIS_Y, MIRRORAXIS_Z} mirroraxis;
  //double mirror_dis;
  //bool lathe;
  //enum LATHEAXIS {LATHEAXIS_X=0, LATHEAXIS_Y, LATHEAXIS_Z} lathe_axis;
  //int lathe_seg;
  CAtlArray<CMYVertex*> *vertex;
  CAtlArray<CMYFace*> *face;
  CAtlArray<int> *vertexattrUID;
};

class CMYBone
{
  public:
    CMYBone() : parent(NULL), id(0), P(0), rtX(0), rtY(0), rtZ(0), tpX(0), tpY(0), tpZ(0), rotB(0), rotH(0), rotP(0), mvX(0), mvY(0), mvZ(0), scX(0), scY(0), scZ(0), fbxNode(NULL), isDummy(false)
    {
    }
    ~CMYBone()
    {
    }
    CMYBone *parent;
    CAtlArray<CMYBone*> childs;
    int id;
    CString name;
    FbxNode *fbxNode;
    
    int P;
    CAtlArray<int> C;
    CAtlArray<int> oi;
    CAtlArray<int> vi;
    CAtlArray<double> w;
    
    double rtX, rtY, rtZ;
    double tpX, tpY, tpZ;
    double rotB, rotH, rotP;
    double mvX, mvY, mvZ;
    double scX, scY, scZ;
    
    bool isDummy;
};

class CMYMQO
{
public:
  int m_currentMaterialIndex;
  CAtlArray<CMYMaterial*> m_materials;
  CAtlArray<CMYObject*> m_objects;
  CAtlArray<CMYBone> m_bones;
//  CAtlArray<int> m_boneObjIndex;
  
  CMYMQO() : m_currentMaterialIndex(-1)
  {
  }
  
  ~CMYMQO()
  {
    int s = m_materials.GetCount();
    for(int i=0;i<s;i++)
    {
      delete m_materials[i];
    }
    m_materials.RemoveAll();
  }
  
  void VisibleObjOnly()
  {
    int s = m_objects.GetCount();
    for(int i=s-1;i>=0;i--)
    {
      if(m_objects[i]->visible == false)
      {
        delete m_objects[i];
        m_objects.RemoveAt(i);
      }
    }
  }
  
  CMYMaterial* GetCurrentMaterial()
  {
    if(m_currentMaterialIndex==-1)
    {
      CMYMaterial *pMat = new CMYMaterial();
      if(pMat==NULL)return NULL;
      m_materials.Add(pMat);
      m_currentMaterialIndex = m_materials.GetCount()-1;
      return pMat;
    } else {
      return m_materials[m_currentMaterialIndex];
    }
  }
  CMYMaterial* ClearCurrentMaterial()
  {
    m_currentMaterialIndex = -1;
  }
  void AddMaterial(CMYMaterial *pMat)
  {
    m_materials.Add(pMat);
  }
  
  CMYBone *AddBone(const char *name)
  {
    int idx = m_bones.Add();
    m_bones[idx].name = name;
    return &(m_bones[idx]);
  }
  CMYBone *FindBone(int id)
  {
    int m = m_bones.GetCount();
    for(int i=0;i<m;i++)
    {
      if(m_bones[i].id==id)return &(m_bones[i]);
    }
    return NULL;
  }
};

class __CMyVertexAttr
{
public:
  __CMyVertexAttr() : uid(NULL)
  {
  }
  CAtlArray<int> *uid;
};

typedef struct PassData
{
  union {
    __int64 i;
    double dbl;
    CString *str;
  };
} PassData;

typedef struct Scanner
{
    int			fd;
    uchar		*bot, *tok, *ptr, *cur, *pos, *lim, *top, *eof;
    uint		line;
    PassData val;
} Scanner;

/*enum {
 TAG_MetasequoiaDocument, TAG_FormatTextVer11, TAG_Thumbnail, TAG_IncludeXml, TAG_Scene, TAG_pos, TAG_lookat, TAG_head, TAG_pich, TAG_bank, TAG_ortho, TAG_zoom2, TAG_amb, TAG_frontclip, TAG_backclip, TAG_dirlights, TAG_light, TAG_dir, TAG_color, 
 TAG_Material, TAG_shader, TAG_vcol, TAG_dbls, TAG_col, TAG_uid, TAG_dif, TAG_amb, TAG_emi, TAG_spc, TAG_power, TAG_reflect, TAG_refract, TAG_tex, TAG_aplane, TAG_bump, TAG_proj_type, TAG_proj_pos, TAG_proj_scale, TAG_proj_angle, 
 TAG_Object, TAG_depth, TAG_folding, TAG_scale, TAG_rotation, TAG_translation, TAG_patch, TAG_patchtri, TAG_patchsmoothtri, TAG_patchlimitsurface, TAG_patchmeshinterp, TAG_patchuvinterp, TAG_segment, TAG_visible, TAG_locking, TAG_shading, TAG_facet, TAG_normal_weight, TAG_color, TAG_color_type, TAG_mirror, TAG_mirror_axis, TAG_mirror_dis, TAG_lathe, TAG_lathe_axis, TAG_lathe_seg, TAG_vertex, TAG_BVertex, TAG_vertexattr, TAG_weit, TAG_face, TAG_V, TAG_M, TAG_UID, TAG_UV, TAG_COL, TAG_N, TAG_CRS, TAG_Blob, 
 TAG_Eof};*/


#include "MQOParser.h"
#include "MQOParser.c"


CString ReadStr(uchar *token, uint len)
{
  CStringA tmpA;
  tmpA.SetString((const char *)token, len);
  CStringW tmpB = CA2W(tmpA, CP_UTF8);
  tmpB.Replace(L"%", L"%%");
  CString retStr;
  retStr.Format(tmpB);
  return retStr;
}

BOOL fill(int n) { return FALSE; }

int scan(Scanner *s){
	uchar *cursor = s->cur;
std:
	s->tok = cursor;



{
	YYCTYPE yych;
	unsigned int yyaccept = 0;

	if ((YYLIMIT - YYCURSOR) < 20) if(!fill(20)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\t':
	case ' ':	goto yy35;
	case '\n':	goto yy52;
	case '\v':
	case '\f':	goto yy51;
	case '\r':	goto yy54;
	case 0x1A:	goto yy49;
	case '"':	goto yy40;
	case '(':	goto yy41;
	case ')':	goto yy43;
	case '+':
	case '-':	goto yy34;
	case '.':	goto yy39;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy37;
	case 'B':	goto yy9;
	case 'C':	goto yy30;
	case 'E':	goto yy33;
	case 'F':	goto yy4;
	case 'I':	goto yy7;
	case 'M':	goto yy2;
	case 'N':	goto yy31;
	case 'O':	goto yy21;
	case 'S':	goto yy8;
	case 'T':	goto yy6;
	case 'U':	goto yy29;
	case 'V':	goto yy27;
	case 'a':	goto yy15;
	case 'b':	goto yy20;
	case 'c':	goto yy10;
	case 'd':	goto yy13;
	case 'e':	goto yy16;
	case 'f':	goto yy22;
	case 'l':	goto yy23;
	case 'm':	goto yy25;
	case 'n':	goto yy24;
	case 'p':	goto yy17;
	case 'r':	goto yy18;
	case 's':	goto yy11;
	case 't':	goto yy19;
	case 'u':	goto yy14;
	case 'v':	goto yy12;
	case 'w':	goto yy26;
	case '{':	goto yy45;
	case '}':	goto yy47;
	default:	goto yy55;
	}
yy2:
	yyaccept = 0;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy455;
	case 'e':	goto yy456;
	default:	goto yy3;
	}
yy3:
	{ RET(TAG_M); }
yy4:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy436;
	default:	goto yy5;
	}
yy5:
	{
    ATLTRACE("unexpected character: %c\n", *s->tok);
    goto std;
  }
yy6:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'h':	goto yy427;
	default:	goto yy5;
	}
yy7:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'n':	goto yy417;
	default:	goto yy5;
	}
yy8:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'c':	goto yy412;
	default:	goto yy5;
	}
yy9:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'V':	goto yy393;
	case 'a':	goto yy394;
	case 'l':	goto yy392;
	default:	goto yy5;
	}
yy10:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy380;
	default:	goto yy5;
	}
yy11:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'c':	goto yy352;
	case 'e':	goto yy351;
	case 'h':	goto yy350;
	case 'p':	goto yy353;
	default:	goto yy5;
	}
yy12:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'c':	goto yy330;
	case 'e':	goto yy328;
	case 'i':	goto yy329;
	default:	goto yy5;
	}
yy13:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'b':	goto yy318;
	case 'e':	goto yy316;
	case 'i':	goto yy317;
	default:	goto yy5;
	}
yy14:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'i':	goto yy313;
	default:	goto yy5;
	}
yy15:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'm':	goto yy300;
	case 'p':	goto yy299;
	default:	goto yy5;
	}
yy16:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'm':	goto yy291;
	default:	goto yy5;
	}
yy17:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy209;
	case 'o':	goto yy211;
	case 'r':	goto yy210;
	default:	goto yy5;
	}
yy18:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'e':	goto yy190;
	case 'o':	goto yy189;
	default:	goto yy5;
	}
yy19:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'e':	goto yy176;
	case 'r':	goto yy175;
	default:	goto yy5;
	}
yy20:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'u':	goto yy171;
	default:	goto yy5;
	}
yy21:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'b':	goto yy165;
	default:	goto yy5;
	}
yy22:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy152;
	case 'o':	goto yy153;
	default:	goto yy5;
	}
yy23:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy130;
	case 'o':	goto yy131;
	default:	goto yy5;
	}
yy24:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy117;
	default:	goto yy5;
	}
yy25:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'i':	goto yy101;
	default:	goto yy5;
	}
yy26:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'e':	goto yy97;
	default:	goto yy5;
	}
yy27:
	++YYCURSOR;
	{ RET(TAG_V); }
yy29:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'I':	goto yy94;
	case 'V':	goto yy92;
	default:	goto yy5;
	}
yy30:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'O':	goto yy87;
	case 'R':	goto yy86;
	default:	goto yy5;
	}
yy31:
	++YYCURSOR;
	{ RET(TAG_N); }
yy33:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy83;
	default:	goto yy5;
	}
yy34:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '\t':
	case ' ':	goto yy81;
	case '.':	goto yy80;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy74;
	default:	goto yy5;
	}
yy35:
	yyaccept = 2;
	yych = *(YYMARKER = ++YYCURSOR);
	goto yy79;
yy36:
	{ if(cursor == s->eof)RET(0); goto std; }
yy37:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case '.':	goto yy76;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy74;
	default:	goto yy38;
	}
yy38:
	{ uchar *start = s->tok;
				bool bMinus = false;
				if(*start == '-')bMinus = true;
				while(*start<'0' || *start>'9')start++;
				CStringA tmp;
				tmp.SetString((const char *)(start), cursor - start);
				s->val.i = bMinus ? -_atoi64(tmp) : _atoi64(tmp);
				RET(INTVAL); }
yy39:
	yych = *++YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy71;
	default:	goto yy5;
	}
yy40:
	yyaccept = 1;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '\n':	goto yy5;
	default:	goto yy60;
	}
yy41:
	++YYCURSOR;
	{ RET(BR3); }
yy43:
	++YYCURSOR;
	{ RET(BR4); }
yy45:
	++YYCURSOR;
	{ RET(BR1); }
yy47:
	++YYCURSOR;
	{ RET(BR2); }
yy49:
	++YYCURSOR;
	{ RET(0);/*EOF*/ }
yy51:
	yych = *++YYCURSOR;
	goto yy58;
yy52:
	++YYCURSOR;
yy53:
	{
    if(cursor == s->eof)RET(0);
    s->pos = cursor; s->line++;
    goto std;
  }
yy54:
	yych = *++YYCURSOR;
	switch (yych) {
	case '\n':	goto yy56;
	default:	goto yy53;
	}
yy55:
	yych = *++YYCURSOR;
	goto yy5;
yy56:
	yych = *++YYCURSOR;
	goto yy53;
yy57:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
yy58:
	switch (yych) {
	case '\t':
	case '\v':
	case '\f':
	case ' ':	goto yy57;
	default:	goto yy36;
	}
yy59:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
yy60:
	switch (yych) {
	case '\n':	goto yy61;
	case '"':	goto yy64;
	case '\\':	goto yy62;
	default:	goto yy59;
	}
yy61:
	YYCURSOR = YYMARKER;
	switch (yyaccept) {
	case 0: 	goto yy3;
	case 1: 	goto yy5;
	case 2: 	goto yy36;
	case 3: 	goto yy65;
	case 4: 	goto yy106;
	case 5: 	goto yy141;
	case 6: 	goto yy243;
	case 7: 	goto yy293;
	case 8: 	goto yy302;
	case 9: 	goto yy344;
	case 10: 	goto yy355;
	case 11: 	goto yy382;
	case 12: 	goto yy385;
	default:	goto yy482;
	}
yy62:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy61;
	case '"':	goto yy66;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':	goto yy69;
	case '\\':	goto yy62;
	case 'x':	goto yy67;
	default:	goto yy59;
	}
yy64:
	++YYCURSOR;
yy65:
	{ s->val.str = new CString(); *(s->val.str) = ReadStr(s->tok + 1, cursor - s->tok -2); RET(STRVAL); }
yy66:
	yyaccept = 3;
	YYMARKER = ++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy65;
	case '"':	goto yy64;
	case '\\':	goto yy62;
	default:	goto yy59;
	}
yy67:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy61;
	case '"':	goto yy64;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':
	case 'A':
	case 'B':
	case 'C':
	case 'D':
	case 'E':
	case 'F':
	case 'a':
	case 'b':
	case 'c':
	case 'd':
	case 'e':
	case 'f':	goto yy67;
	case '\\':	goto yy62;
	default:	goto yy59;
	}
yy69:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy61;
	case '"':	goto yy64;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':	goto yy69;
	case '\\':	goto yy62;
	default:	goto yy59;
	}
yy71:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy71;
	default:	goto yy73;
	}
yy73:
	{ uchar *start = s->tok;
				bool bMinus = false;
				if(*start == '-')bMinus = true;
				while(!((*start>='0' && *start<='9') || *start=='.'))start++;
				CStringA tmp;
				tmp.SetString((const char *)(start), cursor - start);
				s->val.dbl = bMinus ? -atof(tmp) : atof(tmp);
				RET(DBLVAL); }
yy74:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '.':	goto yy76;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy74;
	default:	goto yy38;
	}
yy76:
	++YYCURSOR;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy76;
	default:	goto yy73;
	}
yy78:
	yyaccept = 2;
	YYMARKER = ++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) if(!fill(2)) { return 0; }
	yych = *YYCURSOR;
yy79:
	switch (yych) {
	case '\t':
	case ' ':	goto yy78;
	case '\v':
	case '\f':	goto yy57;
	case '.':	goto yy80;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy74;
	default:	goto yy36;
	}
yy80:
	yych = *++YYCURSOR;
	switch (yych) {
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy71;
	default:	goto yy61;
	}
yy81:
	++YYCURSOR;
	if ((YYLIMIT - YYCURSOR) < 2) if(!fill(2)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\t':
	case ' ':	goto yy81;
	case '.':	goto yy80;
	case '0':
	case '1':
	case '2':
	case '3':
	case '4':
	case '5':
	case '6':
	case '7':
	case '8':
	case '9':	goto yy74;
	default:	goto yy61;
	}
yy83:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'f':	goto yy84;
	default:	goto yy61;
	}
yy84:
	++YYCURSOR;
	{ RET(TAG_Eof); }
yy86:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'S':	goto yy90;
	default:	goto yy61;
	}
yy87:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'L':	goto yy88;
	default:	goto yy61;
	}
yy88:
	++YYCURSOR;
	{ RET(TAG_COL); }
yy90:
	++YYCURSOR;
	{ RET(TAG_CRS); }
yy92:
	++YYCURSOR;
	{ RET(TAG_UV); }
yy94:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'D':	goto yy95;
	default:	goto yy61;
	}
yy95:
	++YYCURSOR;
	{ RET(TAG_UID); }
yy97:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy98;
	default:	goto yy61;
	}
yy98:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy99;
	default:	goto yy61;
	}
yy99:
	++YYCURSOR;
	{ RET(TAG_weit); }
yy101:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy102;
	default:	goto yy61;
	}
yy102:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy103;
	default:	goto yy61;
	}
yy103:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy104;
	default:	goto yy61;
	}
yy104:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy105;
	default:	goto yy61;
	}
yy105:
	yyaccept = 4;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy107;
	default:	goto yy106;
	}
yy106:
	{ RET(TAG_mirror); }
yy107:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy109;
	case 'd':	goto yy108;
	default:	goto yy61;
	}
yy108:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy114;
	default:	goto yy61;
	}
yy109:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy110;
	default:	goto yy61;
	}
yy110:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy111;
	default:	goto yy61;
	}
yy111:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy112;
	default:	goto yy61;
	}
yy112:
	++YYCURSOR;
	{ RET(TAG_mirror_axis); }
yy114:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy115;
	default:	goto yy61;
	}
yy115:
	++YYCURSOR;
	{ RET(TAG_mirror_dis); }
yy117:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy118;
	default:	goto yy61;
	}
yy118:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy119;
	default:	goto yy61;
	}
yy119:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy120;
	default:	goto yy61;
	}
yy120:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy121;
	default:	goto yy61;
	}
yy121:
	yych = *++YYCURSOR;
	switch (yych) {
	case '_':	goto yy122;
	default:	goto yy61;
	}
yy122:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'w':	goto yy123;
	default:	goto yy61;
	}
yy123:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy124;
	default:	goto yy61;
	}
yy124:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy125;
	default:	goto yy61;
	}
yy125:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy126;
	default:	goto yy61;
	}
yy126:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy127;
	default:	goto yy61;
	}
yy127:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy128;
	default:	goto yy61;
	}
yy128:
	++YYCURSOR;
	{ RET(TAG_normal_weight) }
yy130:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy138;
	default:	goto yy61;
	}
yy131:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy132;
	default:	goto yy61;
	}
yy132:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'k':	goto yy133;
	default:	goto yy61;
	}
yy133:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy134;
	default:	goto yy61;
	}
yy134:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy135;
	default:	goto yy61;
	}
yy135:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy136;
	default:	goto yy61;
	}
yy136:
	++YYCURSOR;
	{ RET(TAG_locking); }
yy138:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy139;
	default:	goto yy61;
	}
yy139:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy140;
	default:	goto yy61;
	}
yy140:
	yyaccept = 5;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy142;
	default:	goto yy141;
	}
yy141:
	{ RET(TAG_lathe); }
yy142:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy143;
	case 's':	goto yy144;
	default:	goto yy61;
	}
yy143:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy148;
	default:	goto yy61;
	}
yy144:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy145;
	default:	goto yy61;
	}
yy145:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy146;
	default:	goto yy61;
	}
yy146:
	++YYCURSOR;
	{ RET(TAG_lathe_seg); }
yy148:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy149;
	default:	goto yy61;
	}
yy149:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy150;
	default:	goto yy61;
	}
yy150:
	++YYCURSOR;
	{ RET(TAG_lathe_axis); }
yy152:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy160;
	default:	goto yy61;
	}
yy153:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy154;
	default:	goto yy61;
	}
yy154:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy155;
	default:	goto yy61;
	}
yy155:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy156;
	default:	goto yy61;
	}
yy156:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy157;
	default:	goto yy61;
	}
yy157:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy158;
	default:	goto yy61;
	}
yy158:
	++YYCURSOR;
	{ RET(TAG_folding); }
yy160:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy161;
	default:	goto yy61;
	}
yy161:
	++YYCURSOR;
	switch ((yych = *YYCURSOR)) {
	case 't':	goto yy163;
	default:	goto yy162;
	}
yy162:
	{ RET(TAG_face); }
yy163:
	++YYCURSOR;
	{ RET(TAG_facet); }
yy165:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'j':	goto yy166;
	default:	goto yy61;
	}
yy166:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy167;
	default:	goto yy61;
	}
yy167:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy168;
	default:	goto yy61;
	}
yy168:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy169;
	default:	goto yy61;
	}
yy169:
	++YYCURSOR;
	{ RET(TAG_Object); }
yy171:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy172;
	default:	goto yy61;
	}
yy172:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy173;
	default:	goto yy61;
	}
yy173:
	++YYCURSOR;
	{ RET(TAG_bump); }
yy175:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy179;
	default:	goto yy61;
	}
yy176:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy177;
	default:	goto yy61;
	}
yy177:
	++YYCURSOR;
	{ RET(TAG_tex); }
yy179:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy180;
	default:	goto yy61;
	}
yy180:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy181;
	default:	goto yy61;
	}
yy181:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy182;
	default:	goto yy61;
	}
yy182:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy183;
	default:	goto yy61;
	}
yy183:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy184;
	default:	goto yy61;
	}
yy184:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy185;
	default:	goto yy61;
	}
yy185:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy186;
	default:	goto yy61;
	}
yy186:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy187;
	default:	goto yy61;
	}
yy187:
	++YYCURSOR;
	{ RET(TAG_translation); }
yy189:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy202;
	default:	goto yy61;
	}
yy190:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'f':	goto yy191;
	default:	goto yy61;
	}
yy191:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy193;
	case 'r':	goto yy192;
	default:	goto yy61;
	}
yy192:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy198;
	default:	goto yy61;
	}
yy193:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy194;
	default:	goto yy61;
	}
yy194:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy195;
	default:	goto yy61;
	}
yy195:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy196;
	default:	goto yy61;
	}
yy196:
	++YYCURSOR;
	{ RET(TAG_reflect); }
yy198:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy199;
	default:	goto yy61;
	}
yy199:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy200;
	default:	goto yy61;
	}
yy200:
	++YYCURSOR;
	{ RET(TAG_refract); }
yy202:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy203;
	default:	goto yy61;
	}
yy203:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy204;
	default:	goto yy61;
	}
yy204:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy205;
	default:	goto yy61;
	}
yy205:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy206;
	default:	goto yy61;
	}
yy206:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy207;
	default:	goto yy61;
	}
yy207:
	++YYCURSOR;
	{ RET(TAG_rotation); }
yy209:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy240;
	default:	goto yy61;
	}
yy210:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy216;
	default:	goto yy61;
	}
yy211:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'w':	goto yy212;
	default:	goto yy61;
	}
yy212:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy213;
	default:	goto yy61;
	}
yy213:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy214;
	default:	goto yy61;
	}
yy214:
	++YYCURSOR;
	{ RET(TAG_power); }
yy216:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'j':	goto yy217;
	default:	goto yy61;
	}
yy217:
	yych = *++YYCURSOR;
	switch (yych) {
	case '_':	goto yy218;
	default:	goto yy61;
	}
yy218:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy219;
	case 'p':	goto yy221;
	case 's':	goto yy220;
	case 't':	goto yy222;
	default:	goto yy61;
	}
yy219:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy235;
	default:	goto yy61;
	}
yy220:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy230;
	default:	goto yy61;
	}
yy221:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy227;
	default:	goto yy61;
	}
yy222:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'y':	goto yy223;
	default:	goto yy61;
	}
yy223:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy224;
	default:	goto yy61;
	}
yy224:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy225;
	default:	goto yy61;
	}
yy225:
	++YYCURSOR;
	{ RET(TAG_proj_type); }
yy227:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy228;
	default:	goto yy61;
	}
yy228:
	++YYCURSOR;
	{ RET(TAG_proj_pos); }
yy230:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy231;
	default:	goto yy61;
	}
yy231:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy232;
	default:	goto yy61;
	}
yy232:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy233;
	default:	goto yy61;
	}
yy233:
	++YYCURSOR;
	{ RET(TAG_proj_scale); }
yy235:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy236;
	default:	goto yy61;
	}
yy236:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy237;
	default:	goto yy61;
	}
yy237:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy238;
	default:	goto yy61;
	}
yy238:
	++YYCURSOR;
	{ RET(TAG_proj_angle); }
yy240:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy241;
	default:	goto yy61;
	}
yy241:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy242;
	default:	goto yy61;
	}
yy242:
	yyaccept = 6;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'l':	goto yy246;
	case 'm':	goto yy245;
	case 's':	goto yy247;
	case 't':	goto yy248;
	case 'u':	goto yy244;
	default:	goto yy243;
	}
yy243:
	{ RET(TAG_patch); }
yy244:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'v':	goto yy283;
	default:	goto yy61;
	}
yy245:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy273;
	default:	goto yy61;
	}
yy246:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy261;
	default:	goto yy61;
	}
yy247:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy252;
	default:	goto yy61;
	}
yy248:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy249;
	default:	goto yy61;
	}
yy249:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy250;
	default:	goto yy61;
	}
yy250:
	++YYCURSOR;
	{ RET(TAG_patchtri); }
yy252:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy253;
	default:	goto yy61;
	}
yy253:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy254;
	default:	goto yy61;
	}
yy254:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy255;
	default:	goto yy61;
	}
yy255:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy256;
	default:	goto yy61;
	}
yy256:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy257;
	default:	goto yy61;
	}
yy257:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy258;
	default:	goto yy61;
	}
yy258:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy259;
	default:	goto yy61;
	}
yy259:
	++YYCURSOR;
	{ RET(TAG_patchsmoothtri); }
yy261:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy262;
	default:	goto yy61;
	}
yy262:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy263;
	default:	goto yy61;
	}
yy263:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy264;
	default:	goto yy61;
	}
yy264:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy265;
	default:	goto yy61;
	}
yy265:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy266;
	default:	goto yy61;
	}
yy266:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy267;
	default:	goto yy61;
	}
yy267:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'f':	goto yy268;
	default:	goto yy61;
	}
yy268:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy269;
	default:	goto yy61;
	}
yy269:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy270;
	default:	goto yy61;
	}
yy270:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy271;
	default:	goto yy61;
	}
yy271:
	++YYCURSOR;
	{ RET(TAG_patchlimitsurface); }
yy273:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy274;
	default:	goto yy61;
	}
yy274:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy275;
	default:	goto yy61;
	}
yy275:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy276;
	default:	goto yy61;
	}
yy276:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy277;
	default:	goto yy61;
	}
yy277:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy278;
	default:	goto yy61;
	}
yy278:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy279;
	default:	goto yy61;
	}
yy279:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy280;
	default:	goto yy61;
	}
yy280:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy281;
	default:	goto yy61;
	}
yy281:
	++YYCURSOR;
	{ RET(TAG_patchmeshinterp); }
yy283:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy284;
	default:	goto yy61;
	}
yy284:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy285;
	default:	goto yy61;
	}
yy285:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy286;
	default:	goto yy61;
	}
yy286:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy287;
	default:	goto yy61;
	}
yy287:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy288;
	default:	goto yy61;
	}
yy288:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy289;
	default:	goto yy61;
	}
yy289:
	++YYCURSOR;
	{ RET(TAG_patchuvinterp); }
yy291:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy292;
	default:	goto yy61;
	}
yy292:
	yyaccept = 7;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy294;
	default:	goto yy293;
	}
yy293:
	{ RET(TAG_emi); }
yy294:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy295;
	default:	goto yy61;
	}
yy295:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy296;
	default:	goto yy61;
	}
yy296:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy297;
	default:	goto yy61;
	}
yy297:
	++YYCURSOR;
	{ RET(TAG_emi_col); }
yy299:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy308;
	default:	goto yy61;
	}
yy300:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'b':	goto yy301;
	default:	goto yy61;
	}
yy301:
	yyaccept = 8;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy303;
	default:	goto yy302;
	}
yy302:
	{ RET(TAG_amb); }
yy303:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy304;
	default:	goto yy61;
	}
yy304:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy305;
	default:	goto yy61;
	}
yy305:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy306;
	default:	goto yy61;
	}
yy306:
	++YYCURSOR;
	{ RET(TAG_amb_col); }
yy308:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy309;
	default:	goto yy61;
	}
yy309:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy310;
	default:	goto yy61;
	}
yy310:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy311;
	default:	goto yy61;
	}
yy311:
	++YYCURSOR;
	{ RET(TAG_aplane); }
yy313:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy314;
	default:	goto yy61;
	}
yy314:
	++YYCURSOR;
	{ RET(TAG_uid); }
yy316:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy324;
	default:	goto yy61;
	}
yy317:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'f':	goto yy322;
	default:	goto yy61;
	}
yy318:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy319;
	default:	goto yy61;
	}
yy319:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy320;
	default:	goto yy61;
	}
yy320:
	++YYCURSOR;
	{ RET(TAG_dbls); }
yy322:
	++YYCURSOR;
	{ RET(TAG_dif); }
yy324:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy325;
	default:	goto yy61;
	}
yy325:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'h':	goto yy326;
	default:	goto yy61;
	}
yy326:
	++YYCURSOR;
	{ RET(TAG_depth); }
yy328:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy340;
	default:	goto yy61;
	}
yy329:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy334;
	default:	goto yy61;
	}
yy330:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy331;
	default:	goto yy61;
	}
yy331:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy332;
	default:	goto yy61;
	}
yy332:
	++YYCURSOR;
	{ RET(TAG_vcol); }
yy334:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy335;
	default:	goto yy61;
	}
yy335:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'b':	goto yy336;
	default:	goto yy61;
	}
yy336:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy337;
	default:	goto yy61;
	}
yy337:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy338;
	default:	goto yy61;
	}
yy338:
	++YYCURSOR;
	{ RET(TAG_visible); }
yy340:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy341;
	default:	goto yy61;
	}
yy341:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy342;
	default:	goto yy61;
	}
yy342:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy343;
	default:	goto yy61;
	}
yy343:
	yyaccept = 9;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'a':	goto yy345;
	default:	goto yy344;
	}
yy344:
	{ RET(TAG_vertex); }
yy345:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy346;
	default:	goto yy61;
	}
yy346:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy347;
	default:	goto yy61;
	}
yy347:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy348;
	default:	goto yy61;
	}
yy348:
	++YYCURSOR;
	{ RET(TAG_vertexattr); }
yy350:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy371;
	default:	goto yy61;
	}
yy351:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy365;
	default:	goto yy61;
	}
yy352:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy361;
	default:	goto yy61;
	}
yy353:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy354;
	default:	goto yy61;
	}
yy354:
	yyaccept = 10;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy356;
	default:	goto yy355;
	}
yy355:
	{ RET(TAG_spc); }
yy356:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy357;
	default:	goto yy61;
	}
yy357:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy358;
	default:	goto yy61;
	}
yy358:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy359;
	default:	goto yy61;
	}
yy359:
	++YYCURSOR;
	{ RET(TAG_spc_col); }
yy361:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy362;
	default:	goto yy61;
	}
yy362:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy363;
	default:	goto yy61;
	}
yy363:
	++YYCURSOR;
	{ RET(TAG_scale); }
yy365:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy366;
	default:	goto yy61;
	}
yy366:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy367;
	default:	goto yy61;
	}
yy367:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy368;
	default:	goto yy61;
	}
yy368:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy369;
	default:	goto yy61;
	}
yy369:
	++YYCURSOR;
	{ RET(TAG_segment); }
yy371:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy372;
	default:	goto yy61;
	}
yy372:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy373;
	case 'i':	goto yy374;
	default:	goto yy61;
	}
yy373:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy378;
	default:	goto yy61;
	}
yy374:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy375;
	default:	goto yy61;
	}
yy375:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy376;
	default:	goto yy61;
	}
yy376:
	++YYCURSOR;
	{ RET(TAG_shading); }
yy378:
	++YYCURSOR;
	{ RET(TAG_shader); }
yy380:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy381;
	default:	goto yy61;
	}
yy381:
	yyaccept = 11;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'o':	goto yy383;
	default:	goto yy382;
	}
yy382:
	{ RET(TAG_col); }
yy383:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy384;
	default:	goto yy61;
	}
yy384:
	yyaccept = 12;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case '_':	goto yy386;
	default:	goto yy385;
	}
yy385:
	{ RET(TAG_color); }
yy386:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy387;
	default:	goto yy61;
	}
yy387:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'y':	goto yy388;
	default:	goto yy61;
	}
yy388:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'p':	goto yy389;
	default:	goto yy61;
	}
yy389:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy390;
	default:	goto yy61;
	}
yy390:
	++YYCURSOR;
	{ RET(TAG_color_type); }
yy392:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy409;
	default:	goto yy61;
	}
yy393:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy403;
	default:	goto yy61;
	}
yy394:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy395;
	default:	goto yy61;
	}
yy395:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'k':	goto yy396;
	default:	goto yy61;
	}
yy396:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'I':	goto yy397;
	default:	goto yy61;
	}
yy397:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy398;
	default:	goto yy61;
	}
yy398:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy399;
	default:	goto yy61;
	}
yy399:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'g':	goto yy400;
	default:	goto yy61;
	}
yy400:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy401;
	default:	goto yy61;
	}
yy401:
	++YYCURSOR;
	{ goto brskip; }
yy403:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy404;
	default:	goto yy61;
	}
yy404:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy405;
	default:	goto yy61;
	}
yy405:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy406;
	default:	goto yy61;
	}
yy406:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy407;
	default:	goto yy61;
	}
yy407:
	++YYCURSOR;
	{ goto brskip; }
yy409:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'b':	goto yy410;
	default:	goto yy61;
	}
yy410:
	++YYCURSOR;
	{ goto brskip; }
yy412:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy413;
	default:	goto yy61;
	}
yy413:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy414;
	default:	goto yy61;
	}
yy414:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy415;
	default:	goto yy61;
	}
yy415:
	++YYCURSOR;
	{ goto brskip; }
yy417:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy418;
	default:	goto yy61;
	}
yy418:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy419;
	default:	goto yy61;
	}
yy419:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy420;
	default:	goto yy61;
	}
yy420:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'd':	goto yy421;
	default:	goto yy61;
	}
yy421:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy422;
	default:	goto yy61;
	}
yy422:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'X':	goto yy423;
	default:	goto yy61;
	}
yy423:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy424;
	default:	goto yy61;
	}
yy424:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy425;
	default:	goto yy61;
	}
yy425:
	++YYCURSOR;
	{ RET(TAG_IncludeXml); }
yy427:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy428;
	default:	goto yy61;
	}
yy428:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy429;
	default:	goto yy61;
	}
yy429:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'b':	goto yy430;
	default:	goto yy61;
	}
yy430:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy431;
	default:	goto yy61;
	}
yy431:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy432;
	default:	goto yy61;
	}
yy432:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy433;
	default:	goto yy61;
	}
yy433:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy434;
	default:	goto yy61;
	}
yy434:
	++YYCURSOR;
	{ goto brskip; }
yy436:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy437;
	default:	goto yy61;
	}
yy437:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy438;
	default:	goto yy61;
	}
yy438:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy439;
	default:	goto yy61;
	}
yy439:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy440;
	default:	goto yy61;
	}
yy440:
	yych = *++YYCURSOR;
	switch (yych) {
	case ' ':	goto yy441;
	default:	goto yy61;
	}
yy441:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'T':	goto yy442;
	default:	goto yy61;
	}
yy442:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy443;
	default:	goto yy61;
	}
yy443:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy444;
	default:	goto yy61;
	}
yy444:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy445;
	default:	goto yy61;
	}
yy445:
	yych = *++YYCURSOR;
	switch (yych) {
	case ' ':	goto yy446;
	default:	goto yy61;
	}
yy446:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'V':	goto yy447;
	default:	goto yy61;
	}
yy447:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy448;
	default:	goto yy61;
	}
yy448:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy449;
	default:	goto yy61;
	}
yy449:
	yych = *++YYCURSOR;
	switch (yych) {
	case ' ':	goto yy450;
	default:	goto yy61;
	}
yy450:
	yych = *++YYCURSOR;
	switch (yych) {
	case '1':	goto yy451;
	default:	goto yy61;
	}
yy451:
	yych = *++YYCURSOR;
	switch (yych) {
	case '.':	goto yy452;
	default:	goto yy61;
	}
yy452:
	yych = *++YYCURSOR;
	switch (yych) {
	case '1':	goto yy453;
	default:	goto yy61;
	}
yy453:
	++YYCURSOR;
	{ RET(TAG_FormatTextVer11); }
yy455:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy476;
	default:	goto yy61;
	}
yy456:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy457;
	default:	goto yy61;
	}
yy457:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy458;
	default:	goto yy61;
	}
yy458:
	yych = *++YYCURSOR;
	switch (yych) {
	case 's':	goto yy459;
	default:	goto yy61;
	}
yy459:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy460;
	default:	goto yy61;
	}
yy460:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'q':	goto yy461;
	default:	goto yy61;
	}
yy461:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy462;
	default:	goto yy61;
	}
yy462:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy463;
	default:	goto yy61;
	}
yy463:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy464;
	default:	goto yy61;
	}
yy464:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy465;
	default:	goto yy61;
	}
yy465:
	yych = *++YYCURSOR;
	switch (yych) {
	case ' ':	goto yy466;
	default:	goto yy61;
	}
yy466:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'D':	goto yy467;
	default:	goto yy61;
	}
yy467:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'o':	goto yy468;
	default:	goto yy61;
	}
yy468:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'c':	goto yy469;
	default:	goto yy61;
	}
yy469:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'u':	goto yy470;
	default:	goto yy61;
	}
yy470:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'm':	goto yy471;
	default:	goto yy61;
	}
yy471:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy472;
	default:	goto yy61;
	}
yy472:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'n':	goto yy473;
	default:	goto yy61;
	}
yy473:
	yych = *++YYCURSOR;
	switch (yych) {
	case 't':	goto yy474;
	default:	goto yy61;
	}
yy474:
	++YYCURSOR;
	{ RET(TAG_MetasequoiaDocument); }
yy476:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'e':	goto yy477;
	default:	goto yy61;
	}
yy477:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'r':	goto yy478;
	default:	goto yy61;
	}
yy478:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'i':	goto yy479;
	default:	goto yy61;
	}
yy479:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'a':	goto yy480;
	default:	goto yy61;
	}
yy480:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'l':	goto yy481;
	default:	goto yy61;
	}
yy481:
	yyaccept = 13;
	yych = *(YYMARKER = ++YYCURSOR);
	switch (yych) {
	case 'E':	goto yy483;
	default:	goto yy482;
	}
yy482:
	{ RET(TAG_Material); }
yy483:
	yych = *++YYCURSOR;
	switch (yych) {
	case 'x':	goto yy484;
	default:	goto yy61;
	}
yy484:
	++YYCURSOR;
	{ goto brskip; }
}


brskip:
  {
    int cntBr = 0;
brskip2:

{
	YYCTYPE yych;
	if (YYLIMIT <= YYCURSOR) if(!fill(1)) { return 0; }
	yych = *YYCURSOR;
	switch (yych) {
	case '\n':	goto yy492;
	case '{':	goto yy488;
	case '}':	goto yy490;
	default:	goto yy494;
	}
yy488:
	++YYCURSOR;
	{ if(cursor == s->eof)RET(0); cntBr++; goto brskip2; }
yy490:
	++YYCURSOR;
	{ if(cursor == s->eof || cursor+1 == s->eof)RET(0); cntBr--; if(cntBr<=0)goto std; }
yy492:
	++YYCURSOR;
	{ if(cursor == s->eof) RET(0); s->tok = s->pos = cursor; s->line++; goto brskip2; }
yy494:
	++YYCURSOR;
	{ if(cursor == s->eof)RET(0); goto brskip2; }
}

  }
}